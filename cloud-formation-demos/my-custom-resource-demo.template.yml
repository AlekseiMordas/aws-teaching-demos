AWSTemplateFormatVersion: 2010-09-09

# This demonstrates a custom resource.
# On stack create, this template will create an S3 bucket and use a custom resource to populate it.
# On stack delete, the lambda function will clean out the bucket contents, which allows the bucket to be deleted.
#  ERROR - The function itself reports:   No JSON object could be decoded      Failed to execute the command.

Parameters:

  BucketSuffix:
    Description: Suffix to be placed on the "custom-resource-" bucket.
    Type: String
    Default: demonstration

  SourceBucket:
    Description: The bucket (in the same region) - and prefix if you want - to copy source files from.  Written with Oregon in mind...
    Type: String
    Default: kk-site

Resources:

  # Demo bucket:
  S3:
    Type: AWS::S3::Bucket
    Properties: 
      BucketName: !Join [ "", ["custom-resource-", !Ref BucketSuffix]]


  # This custom resource is executed on stack create and stack delete.
  # - On Create: Copies content into our newly created bucket
  # - On Delete: Deletes bucket contents before CloudFormation tries to remove it
  S3BucketContentHandler:
    Type: Custom::CopyOMatic
    Properties:
      ServiceToken: !GetAtt CLIRunnerLambda.Arn
      CliCommandCreate: "aws s3 cp s3://${SourceBucket} s3://${S3} --recursive"
      CliCommandDelete: "aws s3 rm s3://${S3} --recursive"                          # Pretty dangerous...


  # This function is waaaay cool - it runs simple CLI commands for you:
  # See https://github.com/lucioveloso/cli2cloudformation
  CLIRunnerLambda:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: CLIRunner
      Description: Lambda function that can run simple AWS CLI commands.
      Role: !Join [ "", ["arn:aws:iam::", !Ref "AWS::AccountId", ":role/", !Ref LambdaFunctionRole  ] ]  # Would be a lot easier if it didn't have to be in ARN form...
      MemorySize: 256     # Probably should make this variable
      Timeout: 30         # Probably should make this variable
      Runtime: python2.7
      Handler: index.lambda_handler
      # This is assuming I never move or hide this.  Original source from https://github.com/lucioveloso/cli2cloudformation
      Code:
        S3Bucket: kk-uploads-oregon
        S3Key: cli2cfnLambda.zip 


  # This Role allows the Lambda function to make API calls if needed.
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: CLIRunnerLambdaRole  
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          Effect: "Allow"
          Principal:
            Service: "lambda.amazonaws.com"
          Action: "sts:AssumeRole"


  # This Policy is attached to the LambdaFunctionRole.
  # Basic permissions for CloudWatch Logs, S3 copying.
  LambdaFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: LambdaFunctionPolicy
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          Effect: Allow
          Action: 
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:putObject
            - s3:getObject
          Resource: "*"
      Roles: 
        -  !Ref LambdaFunctionRole   

